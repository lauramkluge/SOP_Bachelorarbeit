% ALTHAMMER Althammer polynomials generated by the Stieltjes algorithm.
% This code is used to generate Figure 3 and Figure 4
close all
clearvars
m=60; g=1/10; s=1; nd=[m m]; a0=0; same=1;
ab=r_jacobi(m); 
zw=gauss(m,ab);
xw=[zw(:,1) zw(:,1) zw(:,2) g*zw(:,2)];


n = 60;

%% New proposed methods
% These are based on matrix manipulation, so first the starting vector and
% Jordan matrix are formed. These generate the Krylov subspace

% Starting vector
w = zeros(2*m,1); w(2:2:2*m) = sqrt(zw(:,2));
% Jordan matrix
Z = zeros(2*m);
Z(1:2:end,1:2:end) = diag(zw(:,1));
Z(2:2:end,2:2:end) = diag(zw(:,1));
for k=2*m:-1:1%1:2*m
    if mod(k,2)==1
       Z(k,k+1) = sqrt(g);
    end
end

% Arnoldi iteration
Z2 = Z+ 0.01 * rand(size(Z));
[V,H] = Arnoldi(Z,w,m+1);
[V2,H2] = Arnoldi(Z2,w,m+1);
% Updating procedure
Hup = updating(Z,w,'PR');
Hup2 = updating(Z2,w,'PR');

%% plot computed zeros

% Annahme: A und B sind Ihre Matrizen (Sie müssen sie entsprechend definieren)
A = H2; % Beispiel für A
B = H; % Beispiel für B

% Initialisierung von Zellen für die Matrizen A_i und B_i
A_i_cells = cell(1, 10);
B_i_cells = cell(1, 10);

% Schleife über i von 1 bis 10
for i = 1:10
    % Extrahiere die Submatrix A_i der Größe i x i
    A_i = A(1:i, 1:i);
    
    % Extrahiere die Submatrix B_i der Größe i x i
    B_i = B(1:i, 1:i);
    
    % Speichere die Submatrizen A_i und B_i in den Zellen
    A_i_cells{i} = A_i;
    B_i_cells{i} = B_i;
end

% Plotten der Eigenwerte der Matrizen A_i und B_i
figure;

for i = 1:10
    % Berechnung der Eigenwerte für A_i
    eigenvalues_A_i = eig(A_i_cells{i});
    
    % Berechnung der Eigenwerte für B_i
    eigenvalues_B_i = eig(B_i_cells{i});
    
    % Diskrete Schritte für die y-Achse
    y_values_A_i = i * ones(size(eigenvalues_A_i));
    y_values_B_i = i * ones(size(eigenvalues_B_i));
    
    % Plot der Eigenwerte von A_i in Rot
    scatter(real(eigenvalues_A_i), y_values_A_i, 'rx');
    hold on;
    
    % Plot der Eigenwerte von B_i in Blau
    scatter(real(eigenvalues_B_i), y_values_B_i, 'bo');
end
% Achsentitel und Beschriftungen
title({'gestört 0.1 in rot','und ungestört in blau'});
xlabel('Reale Achse');
ylabel('Grad des Polynoms k');

% Gitter hinzufügen
grid off;

% Achsen anpassen
axis tight;

hold off;